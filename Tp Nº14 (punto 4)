#include <bits/stdc++.h>
using namespace std;

class Figura {
protected:
    string color;
    pair<int, int> posicion;

public:
    Figura(string c, pair<int, int> p) : color(c), posicion(p) {}
    virtual double calcularArea() = 0;
    virtual double calcularPerimetro() = 0;
};

class Circulo : public Figura {
private:
    double radio;

public:
    Circulo(string c, pair<int, int> p, double r) : Figura(c, p), radio(r) {}

    double calcularArea() override {
        return M_PI * radio * radio;
    }

    double calcularPerimetro() override {
        return 2 * M_PI * radio;
    }
};

class Rectangulo : public Figura {
private:
    double ancho, alto;

public:
    Rectangulo(string c, pair<int, int> p, double a, double h) : Figura(c, p), ancho(a), alto(h) {}

    double calcularArea() override {
        return ancho * alto;
    }

    double calcularPerimetro() override {
        return 2 * (ancho + alto);
    }
};

class Triangulo : public Figura {
private:
    double base, altura;

public:
    Triangulo(string c, std::pair<int, int> p, double b, double h) : Figura(c, p), base(b), altura(h) {}

    double calcularArea() override {
        return (base * altura) / 2;
    }

    double calcularPerimetro() override {
        return base + 2 * sqrt(pow(base / 2, 2) + pow(altura, 2));
    }
};

int main() {
    Circulo circulo("Rojo", {0, 0}, 5);
    Rectangulo rectangulo("Verde", {1, 1}, 4, 2);
    Triangulo triangulo("Azul", {2, 2}, 3, 4);

    cout << "Área del círculo: " << circulo.calcularArea() << endl;
    cout << "Perímetro del rectángulo: " << rectangulo.calcularPerimetro() << endl;
    cout << "Área del triángulo: " << triangulo.calcularArea() << endl;

    return 0;
}
