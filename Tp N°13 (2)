#include<iostream>
#include<stdlib.h>
using namespace std;

class Persona {
    private: // Atributos privados de la clase Persona
        string nombre;
        int edad;
    public: // Métodos públicos de la clase Persona
        Persona(string,int); // Constructor de Persona
        void mostrarPersona(); // Método para mostrar los datos de la Persona
};

class Empleado : public Persona {
    private: // Atributo privado de la clase Empleado
        float sueldo;
    public: // Métodos públicos de la clase Empleado
        Empleado(string,int,float); // Constructor de Empleado
        void mostrarEmpleado(); // Método para mostrar los datos del Empleado
};

class Estudiante : public Persona {
    private: // Atributo privado de la clase Estudiante
        float notaFinal;
    public: // Métodos públicos de la clase Estudiante
        Estudiante(string,int,float); // Constructor de Estudiante
        void mostrarEstudiante(); // Método para mostrar los datos del Estudiante
};

class Tecnico : public Estudiante {
    private: // Atributo privado de la clase Técnico
        string especialidad;
    public:
        Tecnico(string,int,float,string); // Constructor de Técnico
        void mostrarTecnico(); // Método para mostrar los datos del Técnico
};

// Implementación de métodos

// Constructor de la clase Persona
Persona::Persona(string _nombre,int _edad) {
    nombre = _nombre;
    edad = _edad;
}

// Método para mostrar los datos de la Persona
void Persona::mostrarPersona() {
    cout << "Nombre: " << nombre << endl;
    cout << "Edad: " << edad << endl;
}

// Constructor de la clase Empleado llamando al constructor de Persona
Empleado::Empleado(string _nombre,int _edad,float _sueldo) : Persona(_nombre,_edad) {
    sueldo = _sueldo;
}

// Método para mostrar los datos del Empleado
void Empleado::mostrarEmpleado() {
    mostrarPersona();
    cout << "Sueldo: " << sueldo << endl;
}

// Constructor de la clase Estudiante llamando al constructor de Persona
Estudiante::Estudiante(string _nombre,int _edad,float _notaFinal) : Persona(_nombre,_edad) {
    notaFinal = _notaFinal;
}

// Método para mostrar los datos del Estudiante
void Estudiante::mostrarEstudiante() {
    mostrarPersona();
    cout << "Nota Final: " << notaFinal << endl;
}

// Constructor de la clase Técnico llamando al constructor de Estudiante
Tecnico::Tecnico(string _nombre,int _edad,float _notaFinal,string _especialidad) : Estudiante(_nombre,_edad,_notaFinal) {
    especialidad = _especialidad;
}

// Método para mostrar los datos del Técnico
void Tecnico::mostrarTecnico() {
    mostrarEstudiante();
    cout << "Especialidad: " << especialidad << endl;
}

// Función principal
int main() {
    Empleado empleado1("Juan",35,1300000);
    cout << "-Empleado-" << endl;
    empleado1.mostrarEmpleado();
    cout << "\n";

    Estudiante estudiante1("Maria",21,16.7);
    cout << "-Estudiante-" << endl;
    estudiante1.mostrarEstudiante();
    cout << "\n";
   
    Tecnico tecnico1("Alejandro",20,15.6,"Informatica");
    cout << "-Tecnico-" << endl;
    tecnico1.mostrarTecnico();
    cout << "\n";
   
    return 0;
}

1) El funcionamiento de este código es crear una clase padre (Persona) y de ahi sacar 2 subclases (Empleado y Estudiante) con sus propios
   atributos y métodos y sacar una subclase (Tecnico) para la subclase Estudiante tambien con sus propios atributos y métodos. Muestran su
   información mediante un método para cada uno mostrando así la información del empleado del estudiante y del técnico.

3) El nombre de la clase padre es Persona.

4) Se hereda de la clase Persona las subclases Empleado y Estudiante

5) La relación es que la clase Tecnico hereda de la clase Estudiante lo cual significa que la
   clase Tecnico es una subclase de la clase Estudiante.

6) El propósito del constructor de la clase Empleado es inicializar los atributos de la clase padre (Persona) y los de la propia clase Empleado.

7) El propósito del método mostrarPersona() es mostrar los valores de los atributos nombre y edad de la clase Persona.

8) Se utiliza el método mostrarEmpleado() para mostrar el salario.
